name: Build zynthbox-plugin-synthv1-lv2 deb

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04-arm
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y build-essential devscripts debhelper lintian build-essential git swig subversion pkg-config autoconf automake premake4 gettext intltool libtool libtool-bin cmake cmake-curses-gui flex bison ngrep qt5-qmake gobjc++ ruby rake xsltproc vorbis-tools zenity ffmpeg libavformat-dev libavcodec-dev libfftw3-dev libmxml-dev zlib1g-dev fluid libfltk1.3-dev libfltk1.3-compat-headers libncurses5-dev liblo-dev dssi-dev libjpeg-dev libxpm-dev libcairo2-dev libglu1-mesa-dev libasound2-dev dbus-x11 jackd2 libjack-jackd2-dev a2jmidid libffi-dev fontconfig-config libfontconfig1-dev libxft-dev libexpat-dev libglib2.0-dev libgettextpo-dev libsqlite3-dev libglibmm-2.4-dev libeigen3-dev libsndfile-dev libsamplerate-dev libarmadillo-dev libreadline-dev lv2-c++-tools libxi-dev libgtk2.0-dev libgtkmm-2.4-dev liblrdf-dev libboost-system-dev libzita-convolver-dev libzita-resampler-dev fonts-roboto libxcursor-dev libxinerama-dev mesa-common-dev libgl1-mesa-dev libfreetype6-dev libswscale-dev qtbase5-dev qtdeclarative5-dev libcanberra-gtk-module libcanberra-gtk3-module libxcb-cursor-dev libgtk-3-dev libxcb-util0-dev libxcb-keysyms1-dev libxcb-xkb-dev libxkbcommon-x11-dev libssl-dev python3 python-is-python3 python3-dev cython3 python3-cffi python3-tk python3-dbus python3-mpmath python3-pil python3-pil.imagetk python3-setuptools python3-pyqt5 python3-numpy python3-evdev 2to3 python3-pip libfreetype-dev meson extra-cmake-modules tree

      - uses: actions/checkout@v2

      - name: Download tar from github release and create orig.tar.gz
        run: |
          PACKAGE_NAME=$(dpkg-parsechangelog --show-field Source)
          PACKAGE_VERSION=$(dpkg-parsechangelog --show-field Version | sed 's/-[^-]*$//')
          wget -O ../${PACKAGE_NAME}_${PACKAGE_VERSION}.orig.tar.gz https://github.com/zynthbox/zynthbox-dependencies/releases/download/RC-5/synthv1-lv2-1.3.0.tar.gz

      - name: Build DEB using Debhelper
        run: |
          dpkg-buildpackage -us -uc
          pwd
          tree ../


      - name: Upload deb to aptly repo
        run: |
          set -x
          echo "Updating repository info"
          apt update
          echo "Installing SSH Client"
          apt install -yy openssh-client
          echo "Ensuring key security"
          chmod 600 ${{ secrets.APTLY_SSH_KEY }}

          ### Make the aptly jobs wait on a global lock file so that the aptly jobs are mutually exclusive
          ### Create a lock file /tmp/publish-aptly-zynthbox.lock and cleanup before completing the job
          echo "Checking if /tmp/publish-aptly-zynthbox.lock exists"
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'while [ -f /tmp/publish-aptly-zynthbox.lock ]; do echo "/tmp/publish-aptly-zynthbox.lock exists. Waiting for other publish jobs to finish first"; sleep 5; done'
          echo "Creating lock file /tmp/publish-aptly-zynthbox.lock"
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'touch /tmp/publish-aptly-zynthbox.lock'

          echo "Uploading debs"
          scp -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} ../*.deb aptly@repo.zynthbox.io:/mnt/pub_zynthbox_io_volume/temp/
          echo "Adding package(s) to repository"
          
          APTLY_REPO="testing"

          if [ "$RELEASE" = "bookworm" ]; then
            ls -l
            for pkg in $(ls -1 *.deb)
              do
                echo "Adding ${pkg}"
                ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'aptly repo add -remove-files '"${APTLY_REPO}-bookworm"' /mnt/pub_zynthbox_io_volume/temp/${pkg}'
            done
            echo "Publishing repository"
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'aptly publish update bookworm '"${APTLY_REPO}-bookworm"
            echo "Cleaning up"
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'if [[ -f /tmp/working ]];then rm /tmp/working;fi'
            echo "Generate list of packages"
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'aptly repo show -with-packages '"${APTLY_REPO}-bookworm"' > '"~/.aptly/public/${APTLY_REPO}-bookworm/${APTLY_REPO}-bookworm.list"
          else
            echo "CANNOT PUBLISH DEBS. UNKNOWN RELEASE $RELEASE"
          fi

          ### Delete lock file /tmp/publish-aptly-zynthbox.lock for other aptly jobs to continue
          echo "Removing lock file"
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.APTLY_SSH_KEY }} aptly@repo.zynthbox.io 'if [[ -f /tmp/publish-aptly-zynthbox.lock ]]; then rm /tmp/publish-aptly-zynthbox.lock; fi'
          set +x
